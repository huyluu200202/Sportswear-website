<div class="container">
  <div class="mt-4">
    <div class="row">
      <div class="col-lg-6">
        <div id="imageZoom" style="
        --url: url('{{shirt.image}}');
        --zoom-x: 0%; --zoom-y: 0%;
        --display: none;">
          <img src='{{shirt.image}}' class='card-img-center' alt='Product Image' />
        </div>
      </div>
      <div class="col-lg-6">
        <h2>{{shirt.name}}</h2>
        <p>{{shirt.description}}</p>
        <p class="mt-2">Giá: {{shirt.price}}</p>
        <p class="mt-2">Size:</p>
        <ul class="size-product">
          {{#each shirt.size}}
          <li><button class="btn btn-outline-primary size-btn">{{this}}</button></li>
          {{/each}}
        </ul>
        {{#if (eq user.role 'admin')}}
        <button class="btn btn-outline-secondary" id="add-to-cart-btn" data-product-id="{{shirt._id}}" hidden>Thêm vào
          giỏ
          hàng</button>
        {{else}}
        <button class="btn btn-outline-secondary" id="add-to-cart-btn" data-product-id="{{shirt._id}}">Thêm vào giỏ
          hàng</button>
        {{/if}}
      </div>
    </div>
  </div>
</div>

<style>
  #imageZoom {
    width: 450px;
    height: 450px;
    position: relative;
    overflow: hidden;
  }

  #imageZoom img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  #imageZoom::after {
    display: var(--display);
    content: '';
    width: 200%;
    height: 200%;
    background-image: var(--url);
    background-size: 200%;
    background-position: var(--zoom-x) var(--zoom-y);
    position: absolute;
    left: -50%;
    top: -50%;
    pointer-events: none;
  }

  .size-product {
    display: flex;
    list-style: none;
    padding: 0;
  }

  .size-product>li {
    margin: 0 4px;
  }

  .size-btn.selected {
    background-color: #007bff;
    color: white;
  }
</style>

<script>
  const userRole = '{{user.role}}';

  let selectedSize = null;

  document.querySelectorAll('.size-btn').forEach(button => {
    button.addEventListener('click', function () {
      document.querySelectorAll('.size-btn').forEach(btn => btn.classList.remove('selected'));
      this.classList.add('selected');
      selectedSize = this.textContent.trim();
    });
  });

  document.getElementById('add-to-cart-btn').addEventListener('click', function () {
    if (!selectedSize) {
      alert('Vui lòng chọn kích cỡ trước khi thêm vào giỏ hàng');
      return;
    }
    if (userRole === '') {
      alert('Vui lòng đăng nhập trước để thực hiện thao tác này');
      window.location.href = '/user/login';
      return;
    }
    const productId = this.getAttribute('data-product-id');
    fetch('/cart/add', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${document.cookie.replace(/(?:(?:^|.*;\s*)token\s*=\s*([^;]*).*$)|^.*$/, "$1")}`
      },
      body: JSON.stringify({ productId, quantity: 1, size: selectedSize })
    })
      .then(response => response.json())
      .then(data => {
        if (data.products) {
          updateCartIcon(data);
          document.querySelectorAll('.size-btn').forEach(btn => btn.classList.remove('selected'));
          selectedSize = null;
        }
      })
      .catch(error => console.error('Error:', error));
  });

  function updateCartIcon(cart) {
    const cartCount = cart.products.reduce((sum, item) => sum + item.quantity, 0);
    const cartIcon = document.querySelector('.fa-cart-shopping');
    if (cartIcon) {
      cartIcon.setAttribute('data-count', cartCount);
    }
    alert('Thêm vào giỏ hàng thành công');
    window.location.href = '/cart';
  }

  // Zoom ảnh
  let imageZoom = document.getElementById('imageZoom');
  imageZoom.addEventListener('mousemove', (event) => {
    imageZoom.style.setProperty('--display', 'block');
    let pointer = {
      x: (event.offsetX * 200) / imageZoom.offsetWidth - 50,
      y: (event.offsetY * 200) / imageZoom.offsetHeight - 50
    }
    imageZoom.style.setProperty('--zoom-x', pointer.x + '%');
    imageZoom.style.setProperty('--zoom-y', pointer.y + '%');
  });
  imageZoom.addEventListener('mouseout', () => {
    imageZoom.style.setProperty('--display', 'none');
  });

</script>